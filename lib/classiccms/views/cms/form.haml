%form{:action=>"/cms/#{record.new_record? ? 'create' : 'update' }", :method=>'post', :enctype=>'multypart/form-date', :'data-cms-id' => record.class, :style => i > 0 ? 'display:none' : ''}
  - model = record.class
  - if !record.new_record?
    %input{:type=>'hidden', :name=> "[#{model}][id]", :value=> record.id}
  - model.fields.each do |key, info|
    .item
      - name = "[#{model}][#{key}]"

      - if info.options[:input] != nil
        %label{key: key}
          %a= key
          %p{:style => 'color: red;'}
        - case info.options[:input]
        - when 'input'
          %input{:type=> 'text', :name=> name, :value=> record[key], :class=>"textfield", :type=> "text"}
        - when 'textarea'
          %textarea{:id => key+rand(1...100).to_s, :name=> name}= record[key]
        - when 'date'
          - record[key] = Date.today if record[key] == nil
          %select{:name=>"[#{model}][#{key}(3i)]"}
            = select_options day_choices, record[key].day
          %select{:name=>"[#{model}][#{key}(2i)]"}
            = select_options month_choices, record[key].month

          %select{:name=>"[#{model}][#{key}(1i)]"}
            = select_options year_choices(0, 6), record[key].year
        - when 'dropdown'
          %select{:name => name}
            = select_options info.options[:options], record[key]
        - when 'image'
          %p.image_select Selecteer image
          %input{:type => 'hidden', :id => "file_#{key}", :name=> name, :value => record[key]}

          %p{:id => "file_#{key}_preview", :style => 'float:left; clear:left;'}
            %img{:src => record.send(key).thumb('50x50').url}
        - when 'document'
          %p.document_select Selecteer bestand
          %input{:type => 'hidden', :id => "file_#{key}", :name=> name, :value => record[key]}
          %p{:id => "file_#{key}_preview", :style => 'float:left; clear:left;'}= record.send(key).name

        - when 'images'
  - if record.new_record?
    - record.connections.each do |connection|
      %input{:type=> 'hidden', :name=> "[#{record.class}][connections][][id]",      :value => connection.id}
      %input{:type=> 'hidden', :name=> "[#{record.class}][connections][][parent_id]",  :value => connection.parent_id}
      %input{:type=> 'hidden', :name=> "[#{record.class}][connections][][section]", :value => connection.section}
      - if connection.files == nil
        %input{:type=> 'hidden', :name=> "[#{record.class}][connections][][file]", :value => connection.section}
      - elsif connection.files.count == 1
        %input{:type=> 'hidden', :name=> "[#{record.class}][connections][][file]", :value => connection.files.first}
      - elsif connection.files.count > 1
        %select{:name => "[#{record.class}][connections][][file]"}
          - connection.files.each do |file|
            %option{:value => file}= file
